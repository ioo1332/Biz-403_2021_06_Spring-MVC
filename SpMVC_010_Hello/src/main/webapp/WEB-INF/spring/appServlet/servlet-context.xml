<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- servlet-context.xml파일에는 controller 클래스이후의 할일들,기능등에 대한 설정이있다 -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 클래스에 @component 등등을 설정하였을때 spring 컨테이너야 니가 좀 보관해줘 라는 설정 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- localhost:8080/hello/static/****로 요청을 하면 webapp/static 폴더에 있는 파일을 찾아라
	그리고 바로 response하라
	이 요청은 controller로 전달할 필요가 없다 -->
	<resources mapping="/static/**" location="/static/" />
	<!-- spring 컨테이너가 클래스를 객체로 생성하여 보관하는데 그때 생성된 객체들을 web project에서는 보통 bean이라고 부른다 
	
	InternalResourceViewResolver 클래스를 사용하고 싶으니 bean으로 만들어서 컨테이너에 보관해 달라
	
	이 클래스에 어떤 method를 호출하려고 했더니 클래스 맴버변수(private)중에 prefix라는변수값과
	surfix라는 변수값이 필요하더라
	
	그래서 미리 변수값을 setter해달라고 지정 property-->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- component
		클래스를 객체로 선언하여 만들어둔 요소들 언제든지 사용할 준비가 된 상태 
		
		scan을 할때 scan하지 않아도 될 클래스를 scan하면서 서버가 시작될때
		비효율적인 기능을 수행하는것을 방지하기 위하여 scan범위를 c.c.h.controller,
		c.c.h.service로 제한해주는것이 좋다-->
	<context:component-scan base-package="com.callor.hello.controller" />
	<context:component-scan base-package="com.callor.hello.service" />
	
	
	
</beans:beans>
